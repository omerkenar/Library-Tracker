version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: librarytracker-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-library}
      POSTGRES_USER: ${POSTGRES_USER:-library_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-library_pass}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 3s
      retries: 20

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: librarytracker-app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      # Spring Datasource (PostgreSQL)
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-library}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-library_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-library_pass}
      JWT_SECRET_KEY: your_jwt_secret

      # JPA/Hibernate
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"

      # Swagger
      SERVER_PORT: 8080


    env_file:
      - .env

volumes:
  db_data:
